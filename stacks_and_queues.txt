1. A stack follows the idea of last in first out order...this could be visualised as a stack of papers or a stack of lunch trays in a cafeteria. A queue follows a first in first out order. This can represented as a traditional line of people waiting to enter a  building or recieved service etc. 

2. They both help you organize a list of things into an order..that then makes it easier to edit and manipulate.

3. I would use the Stack Data Structure for both..because undo and redo have to do with the last action that was taken, but not the ones before it. 

PROGRAMMING QUESTIONS 

1. 


function reverseString(string){
  let arr = [];
  for(var i = 0; i <= string.length -1; i++){
    arr.push(string[i]);
  }
  console.log(arr);
  let reversed =[];
  while(arr != ''){
    let item = arr.pop();
    reversed.push(item);
  }
  return reversed;
}

console.log(reverseString('Bloc!'));



2. ok i updated this to work without the .pop() method

function stackPop(queue){
  let i = 0;
  while(queue[i+1]){
    i++;
  }
  let item = queue[i];
  queue.splice(i);
  console.log(queue);
  return item;
}

// console.log(stackPop([1,2,3,4]));

3.

let queue = ["Zach", "Sandy", "Kenny"];

function enqueue(name){
//   let queue = ["Zach", "Sandy", "Kenny"];
  queue.push(name);
  return queue;
}

function dequeue(){
  let temp = queue.shift();
  console.log(queue);
  return temp;
}

console.log(enqueue("Calum"));
console.log(dequeue());